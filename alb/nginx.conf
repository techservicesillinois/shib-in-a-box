
user  nginx;
worker_processes  1;

error_log  /dev/stderr warn;
pid        /dev/null;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /dev/stdout  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    server {
      listen 8080;
      server_name localhost;


      # embedded Docker DNS server
      resolver 127.0.0.11;

      # Vars are dynamically looked up in DNS
      set $service "http://service:8081";
      set $elmr "http://httpd:8080";

      location /elmrsample {
        # Send the same headers as the ALB
        #
        # When using docker-compose $proxy_add_x_forwarded_for will show up as
        # the network's gatway. To make testing easer we are hardcoding a fake IP
        proxy_set_header X-Forwarded-For 1.2.3.4;
        proxy_set_header X-Forwarded-Port 443;
        proxy_set_header X-Forwarded-Proto https;
  
        proxy_set_header Host $http_host;
        proxy_pass $service;
      }

      location / {
        # Send the same headers as the ALB
        #
        # When using docker-compose $proxy_add_x_forwarded_for will show up as
        # the network's gatway. To make testing easer we are hardcoding a fake IP
        proxy_set_header X-Forwarded-For 1.2.3.4;
        proxy_set_header X-Forwarded-Port 443;
        proxy_set_header X-Forwarded-Proto https;

        proxy_set_header Host $http_host;
        proxy_pass $elmr;
      }
    }
}
